if has('macunix')
  let g:python3_host_prog = '/opt/homebrew/bin/python3'
endif

call plug#begin()
Plug 'NLKNguyen/papercolor-theme'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'Yggdroot/indentLine'
Plug 'airblade/vim-gitgutter'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'dag/vim-fish'
Plug 'dpelle/vim-LanguageTool'
Plug 'fatih/vim-go'
Plug 'hdima/python-syntax'
Plug 'mg979/vim-visual-multi'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'scrooloose/nerdcommenter'
Plug 'sjl/gundo.vim'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-scripts/AutoClose'
call plug#end()

filetype plugin on
set encoding=utf-8

"Autoclose-related bugfix
if &term[:4] == "xterm" || &term[:5] == 'screen' || &term[:3] == 'rxvt'
  inoremap <silent> <C-[>OC <RIGHT>
endif

" python-syntax
let python_version_3 = 1
let python_highlight_all = 1

" go-vim

let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1

" indentLine
let g:indentLine_conceallevel = 2
let g:indentLine_concealcursor = "inc"
let g:indentLine_char = 'â”Š'
let g:indentLine_setConceal = 2

" ctrlp
let g:ctrlp_custom_ignore = '\v[\/](__pycache__|node_modules|target|venv)|^(dist|build)|(\.(swp|ico|git|svn))$'
let g:ctrlp_show_hidden = 1
nnoremap <C-P> :CtrlPCurWD<CR>

"nerdtree
map <C-s> :NERDTreeToggle <bar> NERDTreeMirror<CR>
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif | AirlineRefresh
autocmd BufEnter NERD_tree* :let indentLine_enabled = 0 | AirlineRefresh
let NERDTreeShowHidden = 1
let NERDTreeMouseMode = 2
let NERDTreeDirArrowExpandable = ''
let NERDTreeDirArrowCollapsible = ''

" vim-devicons
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1

" vim-nerdtree-syntax-highlight

let s:brown = "905532"
let s:aqua =  "3AFFDB"
let s:blue = "689FB6"
let s:darkBlue = "44788E"
let s:purple = "834F79"
let s:lightPurple = "834F79"
let s:red = "AE403F"
let s:beige = "F5C06F"
let s:yellow = "F09F17"
let s:orange = "D4843E"
let s:darkOrange = "F16529"
let s:pink = "CB6F6F"
let s:salmon = "EE6E73"
let s:green = "8FAA54"
let s:lightGreen = "31B53E"
let s:white = "FFFFFF"
let s:rspec_red = 'FE405F'
let s:git_orange = 'F54D27'

let g:WebDevIconsDefaultFolderSymbolColor = s:beige
let g:WebDevIconsDefaultFileSymbolColor = s:blue

let g:NERDTreeSyntaxDisableDefaultExtensions = 1
let g:NERDTreeSyntaxDisableDefaultExactMatches = 1
let g:NERDTreeSyntaxDisableDefaultPatternMatches = 1
let g:NERDTreeSyntaxEnabledExtensions = ['c', 'h', 'c++', 'cpp', 'py', 'rb', 'js', 'css', 'html']
let g:NERDTreeSyntaxEnabledExactMatches = ['node_modules', 'favicon.ico']

" nerdcommenter
let NERDDefaultAlign='left'

"gundo
let g:gundo_prefer_python3 = 1
nnoremap <F5> :GundoToggle<CR>

" vim-airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#show_splits = 1

" vim-python-pep8-indent
let g:python_pep8_indent_hang_closing = 1

"gitgutter keymappings
map ghn :GitGutterNextHunk<CR>
map ghN :GitGutterPrevHunk<CR>
map ghs :GitGutterStageHunk<CR>
map ghu :GitGutterUndoHunk<CR>
map ghp :GitGutterPreviewHunk<CR>

function DarkTheme()
    "colorscheme sublimemonokai
    colorscheme vim-monokai-tasty
endfunction

function LightTheme()
    colorscheme shirotelin
endfunction

call DarkTheme()
set colorcolumn=80

set matchpairs=(:),{:},[:],<:>
set number
set foldcolumn=3
set updatetime=100
set foldmethod=indent
set cursorline
set statusline=_%f
set title
set mouse=a
set modifiable
set undoreload=0
set belloff=all

set directory^=$HOME/.vim/tmp//

set clipboard=unnamed

" vim hardcodes background color erase even if the terminfo file does
" not contain bce (not to mention that libvte based terminals
" incorrectly contain bce in their terminfo files). This causes
" incorrect background rendering when using a color theme with a
" background color.
let &t_ut=''
